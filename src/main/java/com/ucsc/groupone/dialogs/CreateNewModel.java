/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ucsc.groupone.dialogs;

import com.ucsc.groupone.models.ClassifierModel;
import com.ucsc.groupone.popup.OpenProject;
import com.ucsc.groupone.utils.Extensions;
import com.ucsc.groupone.utils.FileChooserOptions;
import com.ucsc.groupone.utils.SystemConstants;
import com.ucsc.groupone.utils.SystemVariables;
import com.ucsc.groupone.utils.Validator;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author hashan
 */
public class CreateNewModel extends javax.swing.JDialog {

    /**
     * Creates new form CreateNewModel
     */
    ClassifierModel model;
    private final String userHome = System.getProperty("user.home");

    public CreateNewModel(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectModelButtonGroup = new javax.swing.ButtonGroup();
        buttonPanel = new javax.swing.JPanel();
        nextButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        finishButton = new javax.swing.JButton();
        slider = new diu.swe.habib.JPanelSlider.JPanelSlider();
        selectionPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        loadModelPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        externalModelPathText = new javax.swing.JTextField();
        fileChooserButton = new javax.swing.JButton();
        messageBoxExternalModel = new javax.swing.JLabel();
        newModelNameandLocation = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        modelNameField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        modelLocationField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        modelPathField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        messageBoxNameAndLocation = new javax.swing.JLabel();
        newModelPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        pipelineConfigFilePath = new javax.swing.JTextField();
        pipelineConfigFilePathFC = new javax.swing.JButton();
        annotatedImagesDirPath = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        annotatedImagesDirPathFC = new javax.swing.JButton();
        trainDatasetPath = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        trainDatasetPathFC = new javax.swing.JButton();
        testDatasetPath = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        testDatasetPathFC = new javax.swing.JButton();
        messageBox = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        outputDirPath = new javax.swing.JTextField();
        outputDirPathFC = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        numberOfClasses = new javax.swing.JTextField();
        loadModelWithInferencePanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        frozenInferenceGraphPath = new javax.swing.JTextField();
        frozenInferenceGraphFC = new javax.swing.JButton();
        testingImagesPath = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        testImagesFC = new javax.swing.JButton();
        outputImagesPath = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        outputImagesFC = new javax.swing.JButton();
        classesFilePath = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        classFileFC = new javax.swing.JButton();
        messageBox1 = new javax.swing.JLabel();
        teaModelPanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create/Load Model");
        setResizable(false);

        nextButton.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        previousButton.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        previousButton.setText("Previous");
        previousButton.setEnabled(false);
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        finishButton.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        finishButton.setText("Finish");
        finishButton.setEnabled(false);
        finishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(previousButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finishButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextButton)
                    .addComponent(previousButton)
                    .addComponent(finishButton))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        selectionPanel.setName("welcome"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        jLabel1.setText("SELECT OTHER MODES");

        selectModelButtonGroup.add(jRadioButton1);
        jRadioButton1.setText("Create a new model");
        jRadioButton1.setActionCommand("newModel");

        selectModelButtonGroup.add(jRadioButton2);
        jRadioButton2.setText("Load model with inference graph");
        jRadioButton2.setActionCommand("loadModelWithInference");

        selectModelButtonGroup.add(jRadioButton3);
        jRadioButton3.setText("Load an external model");
        jRadioButton3.setActionCommand("loadModelExternal");

        selectModelButtonGroup.add(jRadioButton4);
        jRadioButton4.setSelected(true);
        jRadioButton4.setText("Use Tea-Model");
        jRadioButton4.setActionCommand("teaModel");

        jLabel3.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        jLabel3.setText("PRE-SET MODELS");

        javax.swing.GroupLayout selectionPanelLayout = new javax.swing.GroupLayout(selectionPanel);
        selectionPanel.setLayout(selectionPanelLayout);
        selectionPanelLayout.setHorizontalGroup(
            selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectionPanelLayout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .addGroup(selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(121, 121, 121))
        );
        selectionPanelLayout.setVerticalGroup(
            selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectionPanelLayout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton4)
                .addGap(32, 32, 32)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addGap(89, 89, 89))
        );

        slider.add(selectionPanel, "card2");

        loadModelPanel.setName("loadModel"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        jLabel2.setText("Select the path to your previously saved model file");

        jLabel4.setText("Choose path to file");

        fileChooserButton.setText("...");
        fileChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserButtonActionPerformed(evt);
            }
        });

        messageBoxExternalModel.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        messageBoxExternalModel.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout loadModelPanelLayout = new javax.swing.GroupLayout(loadModelPanel);
        loadModelPanel.setLayout(loadModelPanelLayout);
        loadModelPanelLayout.setHorizontalGroup(
            loadModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loadModelPanelLayout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addGroup(loadModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(loadModelPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(externalModelPathText, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(fileChooserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(messageBoxExternalModel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(71, 71, 71))
        );
        loadModelPanelLayout.setVerticalGroup(
            loadModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadModelPanelLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(loadModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(externalModelPathText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileChooserButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(messageBoxExternalModel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        slider.add(loadModelPanel, "card3");

        newModelNameandLocation.setName("nameAndLocation"); // NOI18N

        jLabel10.setFont(new java.awt.Font("Fira Code", 1, 14)); // NOI18N
        jLabel10.setText("Name and Location");
        jLabel10.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        jLabel11.setText("Model Name");

        modelNameField.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        modelNameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modelNameFieldMouseClicked(evt);
            }
        });
        modelNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                modelNameFieldKeyReleased(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        jLabel12.setText("Model Location");

        modelLocationField.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        jLabel13.setText("Model Path");

        modelPathField.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        modelPathField.setEnabled(false);

        browseButton.setText("...");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        messageBoxNameAndLocation.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        messageBoxNameAndLocation.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout newModelNameandLocationLayout = new javax.swing.GroupLayout(newModelNameandLocation);
        newModelNameandLocation.setLayout(newModelNameandLocationLayout);
        newModelNameandLocationLayout.setHorizontalGroup(
            newModelNameandLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newModelNameandLocationLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(newModelNameandLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newModelNameandLocationLayout.createSequentialGroup()
                        .addComponent(messageBoxNameAndLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(newModelNameandLocationLayout.createSequentialGroup()
                        .addGroup(newModelNameandLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newModelNameandLocationLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(newModelNameandLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(newModelNameandLocationLayout.createSequentialGroup()
                                .addGroup(newModelNameandLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(newModelNameandLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(modelLocationField)
                                    .addComponent(modelNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                    .addComponent(modelPathField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15))))
        );
        newModelNameandLocationLayout.setVerticalGroup(
            newModelNameandLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newModelNameandLocationLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel10)
                .addGap(38, 38, 38)
                .addGroup(newModelNameandLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newModelNameandLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newModelNameandLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(messageBoxNameAndLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        slider.add(newModelNameandLocation, "card5");

        newModelPanel.setName("newModel"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        jLabel5.setText("Select the paths to below files...");

        jLabel6.setText("Path to pipeline config file");

        pipelineConfigFilePathFC.setText("...");
        pipelineConfigFilePathFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipelineConfigFilePathFCActionPerformed(evt);
            }
        });

        jLabel7.setText("Path to annotated images directory");

        annotatedImagesDirPathFC.setText("...");
        annotatedImagesDirPathFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annotatedImagesDirPathFCActionPerformed(evt);
            }
        });

        jLabel8.setText("Path to train dataset file");

        trainDatasetPathFC.setText("...");
        trainDatasetPathFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainDatasetPathFCActionPerformed(evt);
            }
        });

        jLabel9.setText("Path to test dataset file");

        testDatasetPathFC.setText("...");
        testDatasetPathFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testDatasetPathFCActionPerformed(evt);
            }
        });

        messageBox.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        messageBox.setForeground(new java.awt.Color(204, 0, 0));

        jLabel19.setText("Path to output directory");

        outputDirPathFC.setText("...");
        outputDirPathFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputDirPathFCActionPerformed(evt);
            }
        });

        jLabel20.setText("Number of classes");

        javax.swing.GroupLayout newModelPanelLayout = new javax.swing.GroupLayout(newModelPanel);
        newModelPanel.setLayout(newModelPanelLayout);
        newModelPanelLayout.setHorizontalGroup(
            newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newModelPanelLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(messageBox, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
            .addGroup(newModelPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(newModelPanelLayout.createSequentialGroup()
                        .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newModelPanelLayout.createSequentialGroup()
                                .addComponent(trainDatasetPath, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(trainDatasetPathFC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newModelPanelLayout.createSequentialGroup()
                                .addComponent(annotatedImagesDirPath, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(annotatedImagesDirPathFC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newModelPanelLayout.createSequentialGroup()
                                .addComponent(pipelineConfigFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(pipelineConfigFilePathFC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newModelPanelLayout.createSequentialGroup()
                                .addComponent(testDatasetPath, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(outputDirPathFC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(testDatasetPathFC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(newModelPanelLayout.createSequentialGroup()
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(92, 92, 92)
                            .addComponent(numberOfClasses, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(newModelPanelLayout.createSequentialGroup()
                            .addComponent(jLabel19)
                            .addGap(92, 92, 92)
                            .addComponent(outputDirPath, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        newModelPanelLayout.setVerticalGroup(
            newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newModelPanelLayout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(pipelineConfigFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pipelineConfigFilePathFC))
                .addGap(18, 18, 18)
                .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(annotatedImagesDirPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(annotatedImagesDirPathFC))
                .addGap(18, 18, 18)
                .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(trainDatasetPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trainDatasetPathFC))
                .addGap(18, 18, 18)
                .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(testDatasetPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testDatasetPathFC))
                .addGap(18, 18, 18)
                .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(outputDirPathFC)
                    .addComponent(outputDirPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(numberOfClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(messageBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        slider.add(newModelPanel, "card3");

        loadModelWithInferencePanel.setName("loadModelWithInference"); // NOI18N

        jLabel14.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        jLabel14.setText("Select the paths to below files...");

        jLabel15.setText("Path to frozen inference graph");

        frozenInferenceGraphFC.setText("...");
        frozenInferenceGraphFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frozenInferenceGraphFCActionPerformed(evt);
            }
        });

        jLabel16.setText("Path to testing images directory");

        testImagesFC.setText("...");
        testImagesFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testImagesFCActionPerformed(evt);
            }
        });

        jLabel17.setText("Path to output images directory");

        outputImagesFC.setText("...");
        outputImagesFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputImagesFCActionPerformed(evt);
            }
        });

        jLabel18.setText("Path to classes (.pbtxt) file");

        classFileFC.setText("...");
        classFileFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classFileFCActionPerformed(evt);
            }
        });

        messageBox1.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        messageBox1.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout loadModelWithInferencePanelLayout = new javax.swing.GroupLayout(loadModelWithInferencePanel);
        loadModelWithInferencePanel.setLayout(loadModelWithInferencePanelLayout);
        loadModelWithInferencePanelLayout.setHorizontalGroup(
            loadModelWithInferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loadModelWithInferencePanelLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(loadModelWithInferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loadModelWithInferencePanelLayout.createSequentialGroup()
                        .addGroup(loadModelWithInferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(loadModelWithInferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(loadModelWithInferencePanelLayout.createSequentialGroup()
                                .addComponent(classesFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(classFileFC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(loadModelWithInferencePanelLayout.createSequentialGroup()
                                .addComponent(outputImagesPath, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(outputImagesFC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(loadModelWithInferencePanelLayout.createSequentialGroup()
                                .addComponent(testingImagesPath, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(testImagesFC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(loadModelWithInferencePanelLayout.createSequentialGroup()
                                .addComponent(frozenInferenceGraphPath, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(frozenInferenceGraphFC, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(messageBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );
        loadModelWithInferencePanelLayout.setVerticalGroup(
            loadModelWithInferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadModelWithInferencePanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(loadModelWithInferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(frozenInferenceGraphPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(frozenInferenceGraphFC))
                .addGap(18, 18, 18)
                .addGroup(loadModelWithInferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(testingImagesPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testImagesFC))
                .addGap(18, 18, 18)
                .addGroup(loadModelWithInferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(outputImagesPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputImagesFC))
                .addGap(18, 18, 18)
                .addGroup(loadModelWithInferencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(classesFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classFileFC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addComponent(messageBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        slider.add(loadModelWithInferencePanel, "card3");

        teaModelPanel.setName("teaModel"); // NOI18N

        jLabel23.setFont(new java.awt.Font("Fira Code Light", 0, 14)); // NOI18N
        jLabel23.setText("Model");

        jLabel24.setFont(new java.awt.Font("Fira Code Light", 0, 14)); // NOI18N
        jLabel24.setText("Faster RCNN Resnet101");

        jLabel25.setFont(new java.awt.Font("Fira Code Light", 0, 14)); // NOI18N
        jLabel25.setText("Traning Steps");

        jLabel26.setFont(new java.awt.Font("Fira Code Light", 0, 14)); // NOI18N
        jLabel26.setText("12000+");

        jLabel27.setFont(new java.awt.Font("Fira Code Light", 0, 14)); // NOI18N
        jLabel27.setText("DataSet Type");

        jLabel28.setFont(new java.awt.Font("Fira Code Light", 0, 14)); // NOI18N
        jLabel28.setText("In-Situ");

        jLabel29.setFont(new java.awt.Font("Fira Code Light", 0, 14)); // NOI18N
        jLabel29.setText("DataSet");

        jLabel30.setFont(new java.awt.Font("Fira Code Light", 0, 14)); // NOI18N
        jLabel30.setText("1200 Images");

        jLabel31.setFont(new java.awt.Font("Fira Code Light", 0, 14)); // NOI18N
        jLabel31.setText("2 (ready/not-ready)");

        jLabel32.setFont(new java.awt.Font("Fira Code Light", 0, 14)); // NOI18N
        jLabel32.setText("Classes");

        javax.swing.GroupLayout teaModelPanelLayout = new javax.swing.GroupLayout(teaModelPanel);
        teaModelPanel.setLayout(teaModelPanelLayout);
        teaModelPanelLayout.setHorizontalGroup(
            teaModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, teaModelPanelLayout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addGroup(teaModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(teaModelPanelLayout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(teaModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(teaModelPanelLayout.createSequentialGroup()
                            .addComponent(jLabel29)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(teaModelPanelLayout.createSequentialGroup()
                            .addComponent(jLabel27)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(teaModelPanelLayout.createSequentialGroup()
                            .addComponent(jLabel25)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(teaModelPanelLayout.createSequentialGroup()
                            .addComponent(jLabel23)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(66, 66, 66))
        );
        teaModelPanelLayout.setVerticalGroup(
            teaModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teaModelPanelLayout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addGroup(teaModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(teaModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addGroup(teaModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28))
                .addGap(18, 18, 18)
                .addGroup(teaModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30))
                .addGap(18, 18, 18)
                .addGroup(teaModelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel31))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        slider.add(teaModelPanel, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(slider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(slider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        String currentPanel = getCurrentPanel();
        String selectedOption = selectModelButtonGroup.getSelection().getActionCommand();

        if (selectedOption.equals("newModel")) {
            if (currentPanel.equals("welcome")) {
                slider.nextPanel(10, newModelNameandLocation, slider.left);
                previousButton.setEnabled(true);
                nextButton.setEnabled(true);
                finishButton.setEnabled(false);
            } else if (currentPanel.equals("nameAndLocation")) {
                if (!modelNameField.getText().isEmpty()) {
                    slider.nextPanel(10, newModelPanel, slider.left);
                    previousButton.setEnabled(true);
                    nextButton.setEnabled(false);
                    finishButton.setEnabled(true);
                } else {
                    messageBoxNameAndLocation.setText(SystemConstants.REQUIRED);
                }
            }
        } else if (selectedOption.equals("loadModelWithInference")) {
            if (currentPanel.equals("welcome")) {
                slider.nextPanel(10, newModelNameandLocation, slider.left);
                previousButton.setEnabled(true);
                nextButton.setEnabled(true);
                finishButton.setEnabled(false);
            } else if (currentPanel.equals("nameAndLocation")) {
                if (!modelNameField.getText().isEmpty()) {
                    slider.nextPanel(10, loadModelWithInferencePanel, slider.left);
                    previousButton.setEnabled(true);
                    nextButton.setEnabled(false);
                    finishButton.setEnabled(true);
                } else {
                    messageBoxNameAndLocation.setText(SystemConstants.REQUIRED);
                }
            }
        } else if (selectedOption.equals("teaModel")) {
            slider.nextPanel(10, teaModelPanel, slider.left);
            previousButton.setEnabled(true);
            nextButton.setEnabled(false);
            finishButton.setEnabled(true);
        } else {
            slider.nextPanel(10, loadModelPanel, slider.left);
            previousButton.setEnabled(true);
            nextButton.setEnabled(false);
            finishButton.setEnabled(true);
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed

        String currentPanel = getCurrentPanel();
        if (currentPanel.equals("loadModel")) {
            slider.nextPanel(10, selectionPanel, slider.right);
            previousButton.setEnabled(false);
            nextButton.setEnabled(true);
            finishButton.setEnabled(false);
        } else if (currentPanel.equals("nameAndLocation")) {
            slider.nextPanel(10, selectionPanel, slider.right);
            previousButton.setEnabled(false);
            nextButton.setEnabled(true);
            finishButton.setEnabled(false);
        } else if (currentPanel.equals("newModel")) {
            slider.nextPanel(10, newModelNameandLocation, slider.right);
            previousButton.setEnabled(true);
            nextButton.setEnabled(true);
            finishButton.setEnabled(false);
        } else if (currentPanel.equals("loadModelWithInference")) {
            slider.nextPanel(10, newModelNameandLocation, slider.right);
            previousButton.setEnabled(true);
            nextButton.setEnabled(true);
            finishButton.setEnabled(false);
        } else if (currentPanel.equals("teaModel")) {
            slider.nextPanel(10, teaModelPanel, slider.right);
            previousButton.setEnabled(false);
            nextButton.setEnabled(true);
            finishButton.setEnabled(false);
        }
    }//GEN-LAST:event_previousButtonActionPerformed

    private void finishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishButtonActionPerformed
        if (selectModelButtonGroup.getSelection().getActionCommand().equals("newModel")) {
            String pipelineCFPath = this.pipelineConfigFilePath.getText();
            String annotatedIDirPath = this.annotatedImagesDirPath.getText();
            String trainDSPath = this.trainDatasetPath.getText();
            String testDSPath = this.testDatasetPath.getText();
            String outputDirecPath = this.outputDirPath.getText();
            String numClasses = this.numberOfClasses.getText();
            if (pipelineCFPath.isEmpty() || annotatedIDirPath.isEmpty()
                    || trainDSPath.isEmpty() || testDSPath.isEmpty()
                    || outputDirecPath.isEmpty() || numClasses.isEmpty()) {
                messageBox.setText(SystemConstants.REQUIRED);
            } else {
                model = new ClassifierModel();
                this.model.setName(modelNameField.getText());
                this.model.setPath(modelPathField.getText());
                this.model.setPipelineConfiguration(pipelineCFPath);
                this.model.setAnnotatedImagesPath(annotatedIDirPath);
                this.model.setTrainDatasetPath(trainDSPath);
                this.model.setTestDatasetPath(testDSPath);
                this.model.setOiPath(outputDirecPath);
                this.model.setNumberOfClasses(Integer.parseInt(numClasses));

                this.dispose();
            }
        } else if (selectModelButtonGroup.getSelection().getActionCommand().equals("loadModelWithInference")) {
            String figPath = this.frozenInferenceGraphPath.getText();
            String oiPath = this.outputImagesPath.getText();
            String tiPath = this.testingImagesPath.getText();
            String cfPath = this.classesFilePath.getText();

            if (figPath.isEmpty() || oiPath.isEmpty() || tiPath.isEmpty()
                    || cfPath.isEmpty()) {
                messageBox.setText(SystemConstants.REQUIRED);
            } else {
                model = new ClassifierModel();
                this.model.setName(modelNameField.getText());
                this.model.setPath(modelPathField.getText());
                this.model.setOiPath(oiPath);
                this.model.setFigPath(figPath);
                this.model.setTiPath(tiPath);
                this.model.setCfPath(cfPath);

                this.dispose();
            }
        } else if (selectModelButtonGroup.getSelection().getActionCommand().equals("teaModel")) {
            model = new ClassifierModel();
            this.model.setName(SystemConstants.TEA_MODEL_NAME);
            this.model.setPath(SystemConstants.TEA_MODEL_PATH);
            this.model.setFigPath(SystemVariables.TEA_MODEL_FOLDER + "/" + SystemConstants.TEA_GRAPH);
            this.model.setCfPath(SystemVariables.TEA_MODEL_FOLDER + "/" + SystemConstants.TEA_LABEL_MAP);
            this.model.setNumberOfClasses(2);
            this.dispose();
        } else {
            String externalModelPath = externalModelPathText.getText();
            if (externalModelPath.isEmpty()) {
                messageBoxExternalModel.setText(SystemConstants.REQUIRED);
            } else {
                model = new ClassifierModel();
                try {

                    File fXmlFile = new File(externalModelPath);
                    DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                    DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                    Document doc = dBuilder.parse(fXmlFile);

                    doc.getDocumentElement().normalize();
                    NodeList modelPropList = doc.getElementsByTagName("model");

                    Node modelNode = modelPropList.item(0);

                    if (modelNode.getNodeType() == Node.ELEMENT_NODE) {

                        Element mElement = (Element) modelNode;
                        String name = mElement.getAttribute("name");
                        String path = mElement.getAttribute("path");
                        String figPath = mElement.getElementsByTagName("figPath").item(0).getTextContent();
                        String oiPath = mElement.getElementsByTagName("oiPath").item(0).getTextContent();
                        String tiPath = mElement.getElementsByTagName("tiPath").item(0).getTextContent();
                        String cfPath = mElement.getElementsByTagName("cfPath").item(0).getTextContent();
                        String pipePath = mElement.getElementsByTagName("pipelineConfigurationPath").item(0).getTextContent();
                        String annotatedPath = mElement.getElementsByTagName("annotatedImagesPath").item(0).getTextContent();
                        String trainDSPath = mElement.getElementsByTagName("trainDatasetPath").item(0).getTextContent();
                        String testDSPath = mElement.getElementsByTagName("testDatasetPath").item(0).getTextContent();
                        String numClasses = mElement.getElementsByTagName("numberOfClasses").item(0).getTextContent();

                        model.setName(name);
                        model.setPath(path);
                        model.setFigPath(figPath);
                        model.setOiPath(oiPath);
                        model.setTiPath(tiPath);
                        model.setCfPath(cfPath);
                        model.setPipelineConfiguration(pipePath);
                        model.setAnnotatedImagesPath(annotatedPath);
                        model.setTrainDatasetPath(trainDSPath);
                        model.setTestDatasetPath(testDSPath);
                        model.setNumberOfClasses(Integer.parseInt(numClasses));
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                this.dispose();
            }
        }

        model.setIcon(new ImageIcon(SystemConstants.PATH_TO_MODEL_ICON));
    }//GEN-LAST:event_finishButtonActionPerformed

    private void fileChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserButtonActionPerformed
        JFileChooser chooser = new JFileChooser(SystemVariables.IDE_HOME_FOLDER);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("xml files (*.xml)", "xml");
        chooser.setDialogTitle("Select the path to saved model");
        chooser.setFileFilter(filter);
        chooser.showOpenDialog(null);
        File selectedFile = chooser.getSelectedFile();
        if (selectedFile != null) {
            String filePath = selectedFile.getAbsolutePath();
            externalModelPathText.setText(filePath);
        }
        if (!checkUnfilledFields(selectModelButtonGroup.getSelection().getActionCommand())) {
            finishButton.setEnabled(true);
        }
    }//GEN-LAST:event_fileChooserButtonActionPerformed

    private void pipelineConfigFilePathFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipelineConfigFilePathFCActionPerformed
        setPathToTextBox("Select the path to pipeline configuration file",
                JFileChooser.FILES_ONLY,
                pipelineConfigFilePath,
                SystemVariables.TRAINING_FOLDER);
    }//GEN-LAST:event_pipelineConfigFilePathFCActionPerformed

    private void annotatedImagesDirPathFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annotatedImagesDirPathFCActionPerformed
        setPathToTextBox("Select the path to annotated images directory",
                JFileChooser.DIRECTORIES_ONLY,
                annotatedImagesDirPath,
                SystemVariables.OBJECT_DETECTION_FOLDER);
    }//GEN-LAST:event_annotatedImagesDirPathFCActionPerformed

    private void trainDatasetPathFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainDatasetPathFCActionPerformed
        setPathToTextBox("Select the path to train dataset",
                JFileChooser.FILES_ONLY,
                trainDatasetPath,
                SystemVariables.OBJECT_DETECTION_FOLDER + "/data");
    }//GEN-LAST:event_trainDatasetPathFCActionPerformed

    private void testDatasetPathFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testDatasetPathFCActionPerformed
        setPathToTextBox("Select the path to test dataset",
                JFileChooser.FILES_ONLY,
                testDatasetPath,
                SystemVariables.OBJECT_DETECTION_FOLDER + "/data");
    }//GEN-LAST:event_testDatasetPathFCActionPerformed

    private void modelNameFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modelNameFieldMouseClicked
        if (!messageBoxNameAndLocation.getText().equals("")) {
            messageBoxNameAndLocation.setText("");
            modelNameField.setBorder(BorderFactory.createBevelBorder(1));
        }
    }//GEN-LAST:event_modelNameFieldMouseClicked

    private void modelNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modelNameFieldKeyReleased
        modelPathField.setText(modelLocationField.getText().concat("/").concat(modelNameField.getText()).concat(Extensions.XML_FORMAT));
    }//GEN-LAST:event_modelNameFieldKeyReleased

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser(new File(this.userHome
                .concat("/").concat(SystemConstants.IDE_FOLDER)));
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.showOpenDialog(this);
        modelLocationField.setText(fileChooser.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_browseButtonActionPerformed

    private void frozenInferenceGraphFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frozenInferenceGraphFCActionPerformed
        setPathToTextBox("Select the path to frozen inference graph",
                JFileChooser.FILES_ONLY,
                frozenInferenceGraphPath,
                null);
    }//GEN-LAST:event_frozenInferenceGraphFCActionPerformed

    private void testImagesFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testImagesFCActionPerformed
        setPathToTextBox("Select the path to test images directory",
                JFileChooser.DIRECTORIES_ONLY,
                testingImagesPath,
                null);
    }//GEN-LAST:event_testImagesFCActionPerformed

    private void outputImagesFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputImagesFCActionPerformed
        setPathToTextBox("Select the path to output images directory",
                JFileChooser.DIRECTORIES_ONLY,
                outputImagesPath,
                null);
    }//GEN-LAST:event_outputImagesFCActionPerformed

    private void classFileFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classFileFCActionPerformed
        setPathToTextBox("Select the path to classes file (.pbtxt)",
                JFileChooser.FILES_ONLY,
                classesFilePath,
                null);
    }//GEN-LAST:event_classFileFCActionPerformed

    private void outputDirPathFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputDirPathFCActionPerformed
        setPathToTextBox("Select the path to output directory",
                JFileChooser.DIRECTORIES_ONLY,
                outputDirPath,
                SystemVariables.TRAINING_FOLDER);
    }//GEN-LAST:event_outputDirPathFCActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateNewModel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateNewModel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateNewModel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateNewModel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreateNewModel dialog = new CreateNewModel(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField annotatedImagesDirPath;
    private javax.swing.JButton annotatedImagesDirPathFC;
    private javax.swing.JButton browseButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton classFileFC;
    private javax.swing.JTextField classesFilePath;
    private javax.swing.JTextField externalModelPathText;
    private javax.swing.JButton fileChooserButton;
    private javax.swing.JButton finishButton;
    private javax.swing.JButton frozenInferenceGraphFC;
    private javax.swing.JTextField frozenInferenceGraphPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel loadModelPanel;
    private javax.swing.JPanel loadModelWithInferencePanel;
    private javax.swing.JLabel messageBox;
    private javax.swing.JLabel messageBox1;
    private javax.swing.JLabel messageBoxExternalModel;
    private javax.swing.JLabel messageBoxNameAndLocation;
    private javax.swing.JTextField modelLocationField;
    private javax.swing.JTextField modelNameField;
    private javax.swing.JTextField modelPathField;
    private javax.swing.JPanel newModelNameandLocation;
    private javax.swing.JPanel newModelPanel;
    private javax.swing.JButton nextButton;
    private javax.swing.JTextField numberOfClasses;
    private javax.swing.JTextField outputDirPath;
    private javax.swing.JButton outputDirPathFC;
    private javax.swing.JButton outputImagesFC;
    private javax.swing.JTextField outputImagesPath;
    private javax.swing.JTextField pipelineConfigFilePath;
    private javax.swing.JButton pipelineConfigFilePathFC;
    private javax.swing.JButton previousButton;
    private javax.swing.ButtonGroup selectModelButtonGroup;
    private javax.swing.JPanel selectionPanel;
    private diu.swe.habib.JPanelSlider.JPanelSlider slider;
    private javax.swing.JPanel teaModelPanel;
    private javax.swing.JTextField testDatasetPath;
    private javax.swing.JButton testDatasetPathFC;
    private javax.swing.JButton testImagesFC;
    private javax.swing.JTextField testingImagesPath;
    private javax.swing.JTextField trainDatasetPath;
    private javax.swing.JButton trainDatasetPathFC;
    // End of variables declaration//GEN-END:variables

    private String getCurrentPanel() {
        return slider.getCurrentComponent(slider).getName();
    }

    public ClassifierModel showDialog() {
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        return model;
    }

    private void setPathToTextBox(String title, int selectionType, JTextField textField, String startLocation) {
        FileChooserOptions.chooseFilePath(title, selectionType, textField, startLocation);
        if (!checkUnfilledFields(selectModelButtonGroup.getSelection().getActionCommand())) {
            finishButton.setEnabled(true);
        }
    }

    private boolean checkUnfilledFields(String selectedOption) {
        if (selectedOption.equals("newModel")) {
            if (pipelineConfigFilePath.getText().equals("") || annotatedImagesDirPath.getText().equals("")
                    || trainDatasetPath.getText().equals("") || testDatasetPath.getText().equals("")) {
                return true;
            }
            return false;
        } else {
            if (externalModelPathText.getText().equals("")) {
                return true;
            }
            return false;
        }
    }

    private void initFields() {
        modelLocationField.setText(SystemVariables.projectRootFolder);
        modelPathField.setText(modelLocationField.getText().concat("/"));

        numberOfClasses.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                Validator.validateNumberInput(evt, modelPathField, messageBox);
            }
        });
    }
}
